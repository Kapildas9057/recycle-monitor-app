rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is super admin
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == 'kd850539@gmail.com';
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/user_roles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is employee
    function isEmployee() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/user_roles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'employee';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSuperAdmin() || isAdmin() || request.auth.uid == userId;
      allow write: if isSuperAdmin();
      allow create: if request.auth != null; // Allow user creation during signup
    }
    
    // User profiles
    match /user_profiles/{userId} {
      allow read: if isSuperAdmin() || isAdmin() || request.auth.uid == userId;
      allow write: if isSuperAdmin() || request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // User roles
    match /user_roles/{userId} {
      allow read: if isSuperAdmin() || isAdmin() || request.auth.uid == userId;
      allow write: if isSuperAdmin();
      allow create: if request.auth != null;
    }
    
    // Waste entries
    match /waste_entries/{entryId} {
      allow read: if isSuperAdmin() || isAdmin() || 
                     (isEmployee() && resource.data.employeeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employee_id);
      allow create: if request.auth != null && isEmployee();
      allow update: if isSuperAdmin() || isAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Super admins collection (if needed)
    match /super_admins/{adminId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
